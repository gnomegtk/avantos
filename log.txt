⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 12 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/MappingModal.test.tsx > MappingModal > renders global options and dependent form fields correctly
TestingLibraryElementError: Unable to find an element by: [data-testid="dependent-forms-header"]

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="modal-overlay"
      data-testid="modal-overlay"
    >
      <div
        class="modal"
        role="dialog"
      >
        <h3>
          Select data element to map for "
          email
          "
        </h3>
        <input
          placeholder="Search..."
          type="text"
          value=""
        />
        <div
          class="modal-section"
        >
          <h4
            data-testid="global-data-header"
          >
            Global Data
          </h4>
          <ul>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Action Property
            </li>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Client Organisation Property
            </li>
          </ul>
        </div>
        <button
          class="close-btn"
        >
          CANCEL
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ tests/MappingModal.test.tsx:31:19
     29|     expect(screen.getByTestId('global-data-header')).toBeInTheDocument();
     30|     // Check that Dependent Forms section is rendered.
     31|     expect(screen.getByTestId('dependent-forms-header')).toBeInTheDocument();
       |                   ^
     32|     // Verify one of the dependent fields (e.g., 'email') is displayed.
     33|     expect(screen.getByText('email')).toBeInTheDocument();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/13]⎯

 FAIL  tests/mapping-modal-arrow-wrap.test.tsx > MappingModal Arrow Key Wrap > wraps focus from the last option to the first (and vice versa) using arrow keys
AssertionError: expected <li role="button" tabindex="0" …(1)></li> to be <li role="button" tabindex="0" …(1)></li> // Object.is equality

- Expected
+ Received

  <li
    class=""
    role="button"
    tabindex="0"
  >
-   Action Property
+   Client Organisation Property
  </li>

 ❯ tests/mapping-modal-arrow-wrap.test.tsx:28:36
     26|     // Press ArrowDown on the last option; focus should wrap to first option.
     27|     fireEvent.keyDown(secondOption, { key: 'ArrowDown', code: 'ArrowDown' });
     28|     expect(document.activeElement).toBe(firstOption);
       |                                    ^
     29| 
     30|     // Now focus the first option.

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/13]⎯

 FAIL  tests/mapping-modal-composite-search.test.tsx > MappingModal Composite Search > displays matching options from both Global and Dependent sections
TestingLibraryElementError: Unable to find an element by: [data-testid="dependent-forms-header"]

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="modal-overlay"
      data-testid="modal-overlay"
    >
      <div
        class="modal"
        role="dialog"
      >
        <h3>
          Select data element to map for "
          email
          "
        </h3>
        <input
          placeholder="Search..."
          type="text"
          value="property"
        />
        <div
          class="modal-section"
        >
          <h4
            data-testid="global-data-header"
          >
            Global Data
          </h4>
          <ul>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Action Property
            </li>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Client Organisation Property
            </li>
          </ul>
        </div>
        <button
          class="close-btn"
        >
          CANCEL
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ tests/mapping-modal-composite-search.test.tsx:36:37
     34|     
     35|     // Check Dependent Forms section.
     36|     const dependentSection = screen.getByTestId('dependent-forms-header').closest('.modal-section');
       |                                     ^
     37|     expect(within(dependentSection!).getByText('propertyField')).toBeInTheDocument();
     38|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/13]⎯

 FAIL  tests/mapping-modal-conditional.test.tsx > MappingModal Conditional Rendering > renders dependent form section when dependencies exist
TestingLibraryElementError: Unable to find an element with the text: /Dependent Forms/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="modal-overlay"
      data-testid="modal-overlay"
    >
      <div
        class="modal"
        role="dialog"
      >
        <h3>
          Select data element to map for "
          email
          "
        </h3>
        <input
          placeholder="Search..."
          type="text"
          value=""
        />
        <div
          class="modal-section"
        >
          <h4
            data-testid="global-data-header"
          >
            Global Data
          </h4>
          <ul>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Action Property
            </li>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Client Organisation Property
            </li>
          </ul>
        </div>
        <button
          class="close-btn"
        >
          CANCEL
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ tests/mapping-modal-conditional.test.tsx:25:19
     23|     );
     24| 
     25|     expect(screen.getByText(/Dependent Forms/i)).toBeInTheDocument();
       |                   ^
     26|   });
     27| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/13]⎯

 FAIL  tests/mapping-modal-dependent-keyboard.test.tsx > MappingModal Dependent Option Keyboard Navigation > selects a dependent option when Enter is pressed
TestingLibraryElementError: Unable to find an element by: [data-testid="dependent-forms-header"]

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="modal-overlay"
      data-testid="modal-overlay"
    >
      <div
        class="modal"
        role="dialog"
      >
        <h3>
          Select data element to map for "
          email
          "
        </h3>
        <input
          placeholder="Search..."
          type="text"
          value=""
        />
        <div
          class="modal-section"
        >
          <h4
            data-testid="global-data-header"
          >
            Global Data
          </h4>
          <ul>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Action Property
            </li>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Client Organisation Property
            </li>
          </ul>
        </div>
        <button
          class="close-btn"
        >
          CANCEL
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ tests/mapping-modal-dependent-keyboard.test.tsx:29:19
     27| 
     28|     // Use the dependent forms header test id for reliable selection.
     29|     expect(screen.getByTestId('dependent-forms-header')).toBeInTheDocument();
       |                   ^
     30|     
     31|     // Find the dependent option "phone".

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/13]⎯

 FAIL  tests/mapping-modal-dependent-section.test.tsx > MappingModal Dependent Section Unaffected by Global Search > displays dependent forms options regardless of the search input
TestingLibraryElementError: Unable to find an element by: [data-testid="dependent-forms-header"]

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="modal-overlay"
      data-testid="modal-overlay"
    >
      <div
        class="modal"
        role="dialog"
      >
        <h3>
          Select data element to map for "
          email
          "
        </h3>
        <input
          placeholder="Search..."
          type="text"
          value=""
        />
        <div
          class="modal-section"
        >
          <h4
            data-testid="global-data-header"
          >
            Global Data
          </h4>
          <ul>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Action Property
            </li>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Client Organisation Property
            </li>
          </ul>
        </div>
        <button
          class="close-btn"
        >
          CANCEL
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ tests/mapping-modal-dependent-section.test.tsx:27:19
     25| 
     26|     // Verify the dependent forms section is visible initially.
     27|     expect(screen.getByTestId('dependent-forms-header')).toBeInTheDocument();
       |                   ^
     28|     expect(screen.getByText('email')).toBeInTheDocument();
     29|     expect(screen.getByText('phone')).toBeInTheDocument();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/13]⎯

 FAIL  tests/mapping-modal-dependent-selection.test.tsx > MappingModal Dependent Option Selection > calls onSelectMapping with correct data when a dependent option is selected
TestingLibraryElementError: Unable to find an element by: [data-testid="dependent-forms-header"]

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="modal-overlay"
      data-testid="modal-overlay"
    >
      <div
        class="modal"
        role="dialog"
      >
        <h3>
          Select data element to map for "
          email
          "
        </h3>
        <input
          placeholder="Search..."
          type="text"
          value=""
        />
        <div
          class="modal-section"
        >
          <h4
            data-testid="global-data-header"
          >
            Global Data
          </h4>
          <ul>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Action Property
            </li>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Client Organisation Property
            </li>
          </ul>
        </div>
        <button
          class="close-btn"
        >
          CANCEL
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ tests/mapping-modal-dependent-selection.test.tsx:29:19
     27| 
     28|     // Verify that the Dependent Forms section exists.
     29|     expect(screen.getByTestId('dependent-forms-header')).toBeInTheDocument();
       |                   ^
     30| 
     31|     // Use within() to find the dependent option "email".

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/13]⎯

 FAIL  tests/mapping-modal-empty-global.test.tsx > MappingModal Empty Global Options > displays fallback message when global options is empty
TypeError: Cannot set property GLOBAL_OPTIONS of [object Module] which has only a getter
 ❯ tests/mapping-modal-empty-global.test.tsx:18:15
     16|   it('displays fallback message when global options is empty', () => {
     17|     // Override GLOBAL_OPTIONS to be an empty array
     18|     constants.GLOBAL_OPTIONS = [];
       |               ^
     19| 
     20|     render(

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/13]⎯

 FAIL  tests/mapping-modal-empty-global.test.tsx > MappingModal Empty Global Options > displays fallback message when global options is empty
TypeError: Cannot set property GLOBAL_OPTIONS of [object Module] which has only a getter
 ❯ tests/mapping-modal-empty-global.test.tsx:13:15
     11|   afterEach(() => {
     12|     // Restore GLOBAL_OPTIONS after each test
     13|     constants.GLOBAL_OPTIONS = originalGlobalOptions;
       |               ^
     14|   });
     15| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/13]⎯

 FAIL  tests/mapping-modal-escape-key.test.tsx > MappingModal Escape Key Behavior > calls onClose when Escape key is pressed
AssertionError: expected "spy" to be called at least once
 ❯ tests/mapping-modal-escape-key.test.tsx:26:21
     24|     // Fire keyDown event on the overlay with Escape.
     25|     fireEvent.keyDown(overlay, { key: 'Escape', code: 'Escape' });
     26|     expect(onClose).toHaveBeenCalled();
       |                     ^
     27|   });
     28| });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/13]⎯

 FAIL  tests/mapping-modal-keyboard-navigation.test.tsx > MappingModal Keyboard Navigation > allows keyboard users to navigate options using arrow keys
AssertionError: expected <li role="button" tabindex="0" …(1)></li> to be <li role="button" tabindex="0" …(1)></li> // Object.is equality

- Expected
+ Received

  <li
    class=""
    role="button"
    tabindex="0"
  >
-   Client Organisation Property
+   Action Property
  </li>

 ❯ tests/mapping-modal-keyboard-navigation.test.tsx:26:36
     24|     // Press ArrowDown to move focus to the next option.
     25|     fireEvent.keyDown(firstOption, { key: 'ArrowDown', code: 'ArrowDown' });
     26|     expect(document.activeElement).toBe(secondOption);
       |                                    ^
     27| 
     28|     // Press ArrowUp to move focus back to the first option.

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/13]⎯

 FAIL  tests/mapping-modal-keyboard.test.tsx > MappingModal Keyboard Navigation > selects a global option when Enter is pressed
AssertionError: expected "spy" to be called with arguments: [ { type: 'global', …(1) } ]

Received: 



Number of calls: 0

 ❯ tests/mapping-modal-keyboard.test.tsx:30:29
     28|     fireEvent.keyDown(actionOption, { key: 'Enter', code: 'Enter', charCode: 13 });
     29| 
     30|     expect(onSelectMapping).toHaveBeenCalledWith({
       |                             ^
     31|       type: 'global',
     32|       sourceGlobalKey: 'action_property',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/13]⎯

 FAIL  tests/mapping-modal-search-reset.test.tsx > MappingModal Dependent Option Keyboard Navigation > selects a dependent option when Enter is pressed
TestingLibraryElementError: Unable to find an element with the text: /^phone$/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="modal-overlay"
      data-testid="modal-overlay"
    >
      <div
        class="modal"
        role="dialog"
      >
        <h3>
          Select data element to map for "
          email
          "
        </h3>
        <input
          placeholder="Search..."
          type="text"
          value=""
        />
        <div
          class="modal-section"
        >
          <h4
            data-testid="global-data-header"
          >
            Global Data
          </h4>
          <ul>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Action Property
            </li>
            <li
              class=""
              role="button"
              tabindex="0"
            >
              Client Organisation Property
            </li>
          </ul>
        </div>
        <button
          class="close-btn"
        >
          CANCEL
        </button>
      </div>
    </div>
  </div>
</body>
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ tests/mapping-modal-search-reset.test.tsx:29:32
     27| 
     28|     // Find the dependent option "phone"
     29|     const phoneOption = screen.getByText(/^phone$/i);
       |                                ^
     30|     
     31|     // Simulate pressing the Enter key on the "phone" option.

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/13]⎯
